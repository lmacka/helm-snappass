apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "snappass.fullname" . }}
  labels:
    {{- include "snappass.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "snappass.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snappass.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "snappass.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        {{- with .Values.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if and .Values.redis.enabled .Values.initContainer.waitForRedis.enabled }}
      initContainers:
      - name: wait-for-redis
        image: busybox:stable
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-redis-master {{ .Values.redis.master.service.ports.redis }}; do echo waiting for redis; sleep 2; done;']
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            {{- with .Values.securityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: SNAPPASS_APP_PORT
              value: "5000"
            - name: SNAPPASS_BIND_ADDRESS
              value: "0.0.0.0"
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ printf "%s-redis-master" .Release.Name | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis.master.service.ports.redis | quote }}
            {{- else }}
            - name: REDIS_HOST
              value: {{ .Values.externalRedis.host | quote }}
            - name: REDIS_PORT
              value: {{ .Values.externalRedis.port | quote }}
            {{- if .Values.externalRedis.database }}
            - name: REDIS_DB
              value: {{ .Values.externalRedis.database | quote }}
            {{- end }}
            {{- if .Values.externalRedis.usePassword }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalRedis.existingSecret }}
                  key: {{ .Values.externalRedis.existingSecretPasswordKey }}
            {{- end }}
            {{- end }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/bin/sh"]
          args:
            - -c
            - |
              export PORT="${SNAPPASS_APP_PORT}"
              unset SNAPPASS_PORT  # Clear the auto-generated variable
              exec snappass
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
